-- local neorg_harpoon = vim.api.nvim_create_augroup('NeorgHarpoon', { clear = true })
-- vim.api.nvim_create_autocmd('BufEnter', {
--     pattern = '*.norg',
--     command = "call nvim_set_keymap('n', '<CR>', '<CR>', {})",
--     group = neorg_harpoon,
--     desc = 'Disable harpoon default keymap when in a norg buffer, so can use CR to follow links',
-- })
-- vim.api.nvim_create_autocmd('BufLeave', {
--     pattern = '*.norg',
--     command = "call nvim_set_keymap('n', '<CR>', ':lua require('harpoon.ui').toggle_quick_menu()<CR>', {})",
--     group = neorg_harpoon,
--     desc = 'Use backspace to exit an entered file in neorg',
-- })
-- local neorg_backspace = vim.api.nvim_create_augroup('NeorgBackspace', { clear = true })
-- vim.api.nvim_create_autocmd('BufEnter', {
--     pattern = '*.norg',
--     command = "call nvim_set_keymap('n', '<BS>', ':e ~/neorg/notes/index.norg<CR>', {})",
--     group = neorg_backspace,
-- })
-- vim.api.nvim_create_autocmd(
--     'BufLeave',
--     { pattern = '*.norg', command = "call nvim_set_keymap('n', '<BS>', '', {})", group = neorg_backspace }
-- )

-- vim.api.nvim_create_autocmd('FileType', {
--     pattern = { 'lua', 'text' },
--     callback = function()
--         local data = {
--             buf = vim.fn.expand '<abuf>',
--             file = vim.fn.expand '<afile>',
--             match = vim.fn.expand '<amatch>',
--         }
--         vim.schedule(function()
--             print 'Hey, we got called'
--             P(data)
--         end)
--     end,
-- })
-- -----------------------------------------------------------------------------
-- -- Skeleton Files
-- -----------------------------------------------------------------------------
-- local spooky_scary_skeletons = vim.api.nvim_create_augroup('SpookyScarySkeletons', { clear = true })
-- vim.api.nvim_create_autocmd(
--     'BufNewFile',
--     { pattern = 'c', command = '0r ~/.config/nvim/templates/skeleton.c', group = spooky_scary_skeletons }
-- )
-- -- vim.api.nvim_create_autocmd(
-- --     'BufNewFile',
-- --     { pattern = 'cpp', callback = function()
-- --         local file = vim.fn.expand '<afile>'
-- --     if file = '0r ~/.config/nvim/templates/skeleton.cpp', group = spooky_scary_skeletons }
-- -- )
-- vim.api.nvim_create_autocmd(
--     'BufNewFile',
--     { pattern = 'java', command = '0r ~/.config/nvim/templates/skeleton.java', group = spooky_scary_skeletons }
-- )
-- vim.api.nvim_create_autocmd(
--     'BufNewFile',
--     { pattern = 'sh', command = '0r ~/.config/nvim/templates/skeleton.sh', group = spooky_scary_skeletons }
-- )
-- vim.api.nvim_create_autocmd(
--     'BufNewFile',
--     { pattern = 'main.rs', command = '0r ~/.config/nvim/templates/skeleton.rs', group = spooky_scary_skeletons }
-- )
-- -----------------------------------------------------------------------------
-- -- File Types
-- -----------------------------------------------------------------------------
-- local file_types = vim.api.nvim_create_augroup('FileTypes', { clear = true })
-- vim.api.nvim_create_autocmd(
--     { 'BufRead', 'BufNewFile' },
--     { pattern = '*.deckspec', command = 'set filetype=yaml', group = file_types }
-- )
-- vim.api.nvim_create_autocmd({ 'BufRead', 'BufNewFile' }, { pattern = '*.something', command = 'set filetype=yaml' })
